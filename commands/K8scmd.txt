1 Kubectl get pods # to list the pods created
2 Kubectl api-resources # list all the resources offered by k8s
3 kubectl  run nginx --image=nginx --dry-run=client # dry run command
4 kubectl run nginx --image=nginx -o yaml 
5 kubectl run nginx --image=nginx --dry-run=client -o yaml >>  test-pod.yaml # generate yaml file without creating the pod
6 kubectl describe pod <pod-name> # describe the details of the pod
7 kubectl exec -it <pod-name> -- bash #login to pod shell command
8 kubectl apply -f <yaml-file>  # to create pod using yaml file
9 kubectl exec -it multi-container-pod -c redis-container -- bash  # to connect to sepecific pod in multi-container
10 kubectl run nginx  --image=nginx --command --<command> <args>
11 kubectl explain pods # to describe  the field associated with each api supported resource
12 kubectl explain pod.spec # descripe spec fields
13 kubectl scale --replicas=<value> rs/<replicaset-name> # used to scale the server in and out based on requirement 
14 kubectl get replicaset OR kubectl get rs
15 kubectl scale rs/nginx-replica --replicas=0
16 kubectl delete -f replica-test.yaml
17 kubectl label pod external-pod app=webserver # to label the pods 
18 kubectl get pods --show-labels # it display the lables of pod
19 kubectl get pods -w
20 kubectl rollout history deployment/nginx-deployment
21 kubectl create deployment nginx-deployment --image=nginx  #command to create deployment
22 kubectl get deployment
23 kubectl set image deployment/nginx-deployment  nginx=httpd:latest  # to update the image for deployment
24 kubectl rollout undo deployment nginx-deployment  # to rollout the deployment
25 kubectl rollout undo deployment nginx-deployment --to-revision=2 # rollout using revision number from history
26 kubectl scale --replicas=3 deployment nginx-deployment # to scale deployment in for nginx
27 kubectl delete deployment <deployment-pod label> # delete deployment pods
28 kubectl get pods -o wide # command to see the node in which pod its running
29 kubectl get daemonset
30 kubectl create priorityclass high-priority --value=1000 --description="high priority"
31 kubectl create priorityclass low-priority --value=100 --description="low priority"
32 kubectl get service #list the service in K8s
33 kubectl create service --help
34 kubectl create service clusterip test-service --tcp=80:80 --dry-run=client -o yaml
35 kubectl create -f nodeport-service.yaml # create nodeport using the file
36 kubectl create namespace development
37 kubectl create namespace perilious
38 kubectl run nginx --image=nginx -n perilious
39 cat /var/run/secrets/kubernetes.io/serviceaccount/token
40 kubectl expose pod nginx --name example-service --port=80 --target-port=http --type=NodePort
41 kubectl autoscale deployment  php-apache --cpu-percent=50 --min=1 --max=3 #hpa autoscale for deployment
42 kubectl autoscale --help
43 kubectl run -i --tty load-generator --rm --image=busybox:1.28 --restart=Never -- /bin/sh -c "while sleep 0.01; do wget -q -O- http://php-apache; done"
44 kubectl get hpa php-apache --watch
45 kubectl create secret generic auth-secret --from-literal=admin=password
46 kubectl create secret generic auth-secret --from-literal=admin=password --dry-run=client -o yaml
47 kubectl get roles --all-namespaces
48 kubectl cluster-info
49 kubectl get clusterrolebinding
50 kubectl config set-context --current --namespace=<namespace name>
51 kubectl config  --kubeconfig=config view
52 kubectl config  --kubeconfig=config get-context
53 kubectl config  --kubeconfig=config use-context <context name>
54 kubectl get pods --all-namespaces --field-selector metadata.namespace!=default
55 kubectl get events --field-selector involvedObject.name=event-pod
56 kubectl logs ping-pod2 <container name>  # in case of 2 container in your pods  you need to specify the pod 
## logging commnd using journal ctl  
57 journalctl --since "2025-09-13 17:00:00" -u kube-apiserver
58 journalctl --since "2025-09-13 17:00:00"  --until "2025-09-13 18:00:00" -u kube-apiserver